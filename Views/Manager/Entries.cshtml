@{
    ViewData["Title"] = "Manager entries page";
    int budget = (int) ViewData["Budget"];
    bool isProjectActive = (bool) ViewData["Active"];
}
@model IEnumerable<NtrTrs.Models.EntryModel>

<div class="container">

    <div class="text-center">
            @if (Model != null && Model.Count() != 0) {
                <h4 class="display-4">@Html.Raw(String.Format("Activity {0}", @Model.FirstOrDefault().Code))</h4>
                
                int index = 0;

                <table class="table">
                    <thead>
                        <tr>
                        <th scope="col">#</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.Date)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.Subcode)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.Time)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.Description)</th>
                        </tr>
                    </thead>

                    @foreach (var entry in Model) {
                        index++;
                        <tbody>
                            <tr>
                                <th scope="row">@index</th>
                                <td>@Html.DisplayFor(modelItem => entry.Date)</td>
                                <td>@Html.DisplayFor(modelItem => entry.Subcode)</td>
                                <td>@Html.DisplayFor(modelItem => entry.Time)</td>
                                <td>@Html.DisplayFor(modelItem => entry.Description)</td>
                            </tr>
                        </tbody>
                    }
                </table>
                    int hours = budget / 60;
                    int minutes = budget - hours * 60;

                    if(@isProjectActive) {
                    <h4 class="text-left p-4">@Html.Raw(String.Format("Budget left: {0} hour(s) and {1} minute(s)", @hours, @minutes))</h4>


                <div class="form-group d-flex justify-content-between">
                    <a href="@Url.Action("CloseProject", "Manager", new { Code = @Model.FirstOrDefault().Code })" class="btn btn-danger">
                        Close project
                    </a>
                    <a href="@Url.Action("SelectUser", "Manager", new { Code = @Model.FirstOrDefault().Code })" class="btn btn-primary">
                        Get User Entries
                    </a>
                </div>

                    } else {
                        <h3 class="text-left">Project is closed</h3>  
                    }
        }
    </div>
</div>